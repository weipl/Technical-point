1,Nginx，Redis，Mycat,dubbo,rabbitMQ,solr,docker


>Nginx
	>>1,理解：一个中间服务器，主要用来做服务器的代理。轻量且高效
	>>2,能干什么？
		>>>1,Http代理，反向代理：作为web服务器最常用的功能   Nginx并发能力:50000次并发/s 真实数据 2-3万之间
			>>>>1,正向代理和反向代理的却别是什么？
			>>>>>1、正向代理类似于一个跳板机，代理访问外部资源。（需要在浏览器配置代理服务器的ip和port）
			
				举个例子：我是一个用户，我访问不了某网站，但是我能访问一个代理服务器，
				这个代理服务器呢,他能访问那个我不能访问的网站，于是我先连上代理服务器,
				告诉他我需要那个无法访问网站的内容，代理服务器去取回来,然后返回给我。
				从网站的角度，只在代理服务器来取内容的时候有一次记录，有时候并不知道是用户的请求，
				也隐藏了用户的资料，这取决于代理告不告诉网站。

			****客户端必须设置正向代理服务器，当然前提是要知道正向代理服务器的IP地址，还有代理程序的端口。****
				例如之前使用过这类软件例如CCproxy，http://www.ccproxy.com/ 需要在浏览器中配置代理的地址。
				浏览器设置->连接->局域网设置
				
			总结来说：正向代理 是一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，
				客户端向代理发送一个请求并指定目标(原始服务器)，然后代理向原始服务器转交请求并将获得的内容返回给客户端。
				正向代理的用途：
				
　　			（1）访问原来无法访问的资源，如google
     			（2） 可以做缓存，加速访问资源
　　			（3）对客户端访问授权，上网进行认证
　　			（4）代理可以记录用户访问记录（上网行为管理），对外隐藏用户信息

				例如CCProxy用途：客户端必须要进行一些特别的设置才能使用正向代理。
				意思是用CCProxy可以共享上网和管理管理客户端上网的权限。
				
			>>>>>2、反向代理对外是透明的，访问者不知道自己访问的是一个代理（客户端不需要任何配置就可以访问）
				反向代理（Reserve Proxy）实际运作方式以代理服务器接受internet上的请求，然后将请求转发给内部网络上的服务器，
					并将服务器上得到的结果返回返回给internet上请求连接的客户端，此时代理服务器对外表现为一服务器.
				反向代理的作用:
					(1)保证内网的安全,可以使用反向代理提供WAF(web application firewall),阻止web攻击
						大型网站都是把Nginx对外提供的是公网地址,web服务器是内网
					(2)负载均衡,通过代理服务器来优化网站的负载
						就是web服务器A,web服务器B,web服务器C分别承担web应用访问.

			总结:正向代理,proxy和client同属一个LAN,对server透明
				反向代理,proxy和server同属一个LAN,对client透明
				实际上proxy在两种代理中做的事都是代发请求和响应,不过从结构上来看左右互换了下,
				所以把后出现的那种代理方式叫成反向代理.
				
		>>>2,负载均衡
			Nginx提供的负载均衡策略有2种：内置策略和扩展策略
			内置策略==>为轮询，加权轮询，Ip hash。
			扩展策略==>，就天马行空，只有你想不到的没有他做不到的啦，你可以参照所有的负载均衡算法，给他一一找出来做下实现
			Ip hash算法，对客户端请求的ip进行hash操作，然后根据hash结果将同一个客户端ip的请求分发给同一台服务器进行处理，
			可以解决session不共享的问题

			Nginx配置文件
			...              #全局块

			events {         #events块
			   ...
			}

			http      #http块
			{
			    ...   #http全局块
			    server        #server块
			    { 
			        ...       #server全局块
			        location [PATTERN]   #location块
			        {
			            ...
			        }
			        location [PATTERN] 
			        {
			            ...
			        }
			    }
			    server
			    {
			      ...
			    }
			    ...     #http全局块
			}
			1、全局块：配置影响nginx全局的指令。一般有运行nginx服务器的用户组，nginx进程pid存放路径，日志存放路径，配置文件引入，允许生成worker process数等。

			2、events块：配置影响nginx服务器或与用户的网络连接。有每个进程的最大连接数，选取哪种事件驱动模型处理连接请求，是否允许同时接受多个网路连接，开启多个网络连接序列化等。

			3、http块：可以嵌套多个server，配置代理，缓存，日志定义等绝大多数功能和第三方模块的配置。如文件引入，mime-type定义，日志自定义，是否使用sendfile传输文件，连接超时时间，单连接请求数等。

			4、server块：配置虚拟主机的相关参数，一个http中可以有多个server。

			5、location块：配置请求的路由，以及各种页面的处理情况。
		>>>3、web缓存

			Nginx可以对不同的文件做不同的缓存处理，配置灵活，并且支持FastCGI_Cache，主要用于对FastCGI的动态程序进行缓存。配合着第三方的ngx_cache_purge，对制定的URL缓存内容可以的进行增删管理。

		>>>4、Nginx相关地址

		源码：https://trac.nginx.org/nginx/browser

		官网：http://www.nginx.org/
		
	>>2,怎么玩?
		>>>1,Nginx下载
			去官网下载,不要放在C盘和中文目录下
		>>>2,Nginx启动
			注意:首先第一次使用时,使用超级管理员权限运行.
			说明:Nginx底层是C语言开发的.当以超级管理员权限运行时,会快速的执行,并且在操作系统中开启2个进程.
			 
			>>>>1,关于进程说明:
				 一个是主进程:主要提供Nginx服务
				一个是守护进程:防止主进程意外关闭的.如果主进程意外关闭了,则再次启动主进程.
				所以关闭nginx的进程应该先关闭守护进程(内存占用少的),之后关闭主进程(内存占用多的)

			>>>>2.关于Nginx的命令(进入Nginx的exe存放路径,在路径框下输入cmd,瞬间到CDM中,然后再输命令)
				启动Nginx: start nginx
				关闭Nginx: nginx -s stop
				重启Nginx: nginx -s reload
				注意事项:Nginx的命令的执行必须在Nginx的根目录下执行.
		>>>3,Nginx实现默认跳转
				浏览器输入localhost,默认访问的Nginx的首页
				问题:如何实现该操作的??
				案例分析:
					server {
				    	#默认监听80端口
				        listen       80;
				        #拦截的请求路径    
				        server_name  localhost;

				        #charset koi8-r;

				        #access_log  logs/host.access.log  main;

				        location / {
				        	#root表示 将请求转向到具体的文件夹中
				            root   html;

				            #index 表示默认的访问页面
				            index  index.html index.htm;
				        }
					}

		>>>4,Nginx实现图片信息回显	(笔者电脑用的是华硕FX63VD游戏本,配置物理地址用的分隔符不一样)	
			#图片服务器
			#可能是电脑的是，用D:\\test或者D:/test
			server {
				listen 80;
				server_name image.jt.com;
				
				location / {
					root   D:\\test;
				}
			}
			---------------------------下面是达内培优班刘昱江老师配置----------------------------
			#图片服务器
			server {
				listen 80;
				server_name image.jt.com;

				location / {

					root E:\jt-upload;
				}
			}

			编辑HOST文件
				说明:让image.jt.com访问时,必须访问本机,才能被Nginx所拦截,实现方向代理技术.

				修改完成后,将Nginx重启
				windows xp/2003/vista/2008/7/8用户HOSTS文件是在“c:\windows\system32\drivers\etc
				笔者路径:C:\Windows\System32\drivers\etc\hosts (按图索骥)
				****有个工具可以代替去找SwitchHosts,注意:用管理员mode启动

			
			跟我配套的代码可以实现商品图片的回显.代码不做解释.使用框架是SSM.数据库用的是mysql
				具体操作步骤是:浏览器输入http://manage.jt.com/index ->上传图片就会网页显示图片

	[Nginx参考引用文章地址:]
		1,https://www.cnblogs.com/knowledgesea/p/5175711.html
		2,https://www.cnblogs.com/Anker/p/6056540.html
		3,达内刘昱江老师笔记
优化:
lucene/solr
sso单点登录优化

docker
	docker五大要素：
	1,沙箱:	隔离,将必要的资源隔离，防止互相影响
	2,镜像:	做好的模板.特点:只读、可拆分、传输用dockerfile（坐标）
	3,容器:	镜像的实例，容器可写。可以保存应用产生的临时文件，但是关闭容器，数据清除。
	4,数据卷:	挂载到容器中，用于保存必要数据。
	5,仓库:	和maven仓库概念一致

	docker缺点：
		不太好docker部署数据库（数据太杂）

	修改静态ip：
		vim /etc/sysconfig/network-scripts/ifcfg-ens33
		修改：IPADDR：原则是改成和虚拟机同网关的ip，地址不冲突就行
			 GATEWAY：改成虚拟机网关
			 DNS1：改成虚拟机网关（不写也行）

		重启服务：service network restart

	

